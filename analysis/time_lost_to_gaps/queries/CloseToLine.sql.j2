create temp function map_label(label string)
as (
  case when label ="drifting_longlines" then "drifting_longlines"
  when label ="purse_seines" then "purse_seines"
  when label ="other_purse_seines" then "purse_seines"
  when label ="tuna_purse_seines" then "purse_seines"
  when label ="cargo_or_tanker" then "cargo_or_tanker"
  when label ="cargo" then "cargo_or_tanker"
  when label ="tanker" then "cargo_or_tanker"
  when label ="squid_jigger" then "squid_jigger"
  when label ="tug" then "tug"
  when label = "trawlers" then "trawlers"
  else "other" end
);

create temp function map_distance(d float64)
as (
case when d < 10/2+3/2 then 3
when d >= 10/2+3/2 and d < 15 then 10
when d >= 15 and d <30 then 20
when d >= 30 and d < 60 then 40
when d >= 60 and d < 120 then 80
when d >= 120 and d <240 then 160
when d >= 240 and d < 480 then 320
when d >= 480 and d < 960 then 640
when d >= 960 then 1280
else null end
);

create temp function map_hours_diff(h float64) as (
case when h < 12 + 18.0 then 12
when h >= 12 + 18.0 and h < 36.0 then 24
when h >= 36 and h < 72 then 48
 when h >= 72 and h < 120 then 96
 when h >= 120 and h < 168 then 144
 when h >= 168 and h < 216 then 192
 when h >= 216 and h < 264 then 240
 when h >= 264 and h < 312 then 288
 when h >= 312 and h < 360 then 336
 when h >= 360 and h < 408 then 384
 when h >= 408 and h < 456 then 432
 when h >= 456 and h < 540 then 480
 when h >= 540 and h < 660 then 600
 when h >= 660 and h < 780 then 720
 when h >= 780 then 840

else null end
);
--
-- QUERY
--
WITH
--
-- Suspected disabling events
--
gap_table AS (
  SELECT
    ssvid,
    off_lat,
    off_lon,
    on_lat,
    on_lon,
    gap_hours,
    gap_distance_m / 1000 as gap_distance_km,
    st_geogpoint(off_lon, off_lat) as gap_start_point,
    st_geogpoint(on_lon, on_lat) as gap_end_point,
    (
      positions_per_day_off > 10
      AND positions_12_hours_before_sat >= 14
    ) as is_real_gap,
    gap_hours / 24 > 14 as over_two_weeks
 -- for spatial allocation, require start or end to be larger than 50 nautical miles
 -- to avoid counting gaps that are in port
  FROM `{{ destination_dataset }}.{{ gap_events_features_table }}`
  WHERE gap_hours >= 12
    AND off_distance_from_shore_m > 1852 * 50
    AND (
      date(gap_start) >= '{{ start_date }}'
      AND date(gap_end) <= '{{ end_date }}'
    )
),
--
-- Fishing vessels list
--
vessel_info AS (
  SELECT
    ssvid,
    year,
    vessel_class,
    best_flag as flag
  FROM `{{ destination_dataset}}.{{ fishing_vessels_table }}`
),
--
--
--
with_mappings AS (
  SELECT
    *,
    map_distance(gap_distance_km) as distance_km,
    map_hours_diff(gap_hours) as hours_diff
  FROM gap_table
  JOIN vessel_info
  USING (ssvid)
),

gap_raster_norm as (
    select
        x,
        y,
        hours,
        vessel_class,
        hours_diff,
        distance_km,
        days_to_start,
        dist_to_line_km
    from
        proj_ais_gaps_catena.raster_gaps_norm_v20211021
),


mapped_to_raster as
(
    select
        *
 except(dist_to_line_km, hours),
        -- if the gap distance is bigger, expand
        dist_to_line_km * gap_distance_km / distance_km as dist_to_line_km,
        gap_hours * hours / hours_diff as hours
    from
        gap_raster_norm
    join
        with_mappings
        using (vessel_class, distance_km, hours_diff)

)

select
    floor(gap_hours / 24) as gap_days,
    sum(hours) as hours,
    sum(if(dist_to_line_km < 111, hours, 0)) / sum(hours) as frac_within_line,
    sum(if(dist_to_line_km < 111, hours, 0)) as hours_close
from
    mapped_to_raster
group by
    gap_days
order by
    gap_days
