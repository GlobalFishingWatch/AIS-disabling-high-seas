CREATE TEMP FUNCTION startdate() AS (DATE('{{ start_date }}'));
CREATE TEMP FUNCTION enddate() AS (DATE('{{ end_date }}'));

#### Reception Quality
with 

good_ssvid as (
    select ssvid
    from `gfw_research.vi_ssvid_{{vi_version}}` 
    where best.best_vessel_class not in  ("gear", "squid_jigger", "pole_and_line")
      and not activity.offsetting 
      and activity.active_positions > 1000
      and best.best_vessel_class is not null
),

sat_ssvid as (
    select ssvid,
           sat_positions,
           lat,
           lon,
           hour,
           interpolated_speed_knots,
           _partitiontime date ,
           A_messages,
           B_messages 
{#     from `{{ destination_dataset }}.ais_positions_byssvid_hourly_{{ output_version }}` #}
    # Use table grouped by segid
    from `{{ destination_dataset }}.ais_positions_byseg_hourly_{{ output_version }}`
    where not interpolated_at_segment_startorend -- don't extrapolate out at the end of segments
      and date(_partitiontime) >= startdate() 
      and date(_partitiontime) < enddate()
      and ssvid in (select ssvid from good_ssvid)
      # Use good segments -- Check with David since we did this originally 
      # but he recently made a comment about not doing it
      and seg_id IN (
          SELECT
          seg_id
          FROM `{{ segs_table }}`
          WHERE good_seg
          AND NOT overlapping_and_short
      )
),

by_half_day as (
    select ssvid,
           avg(interpolated_speed_knots) avg_interpolated_speed_knots,
           min(interpolated_speed_knots) min_interpolated_speed_knots,
           max(interpolated_speed_knots) max_interpolated_speed_knots,
           sum(sat_positions)/count(*) sat_pos_per_hour,
           floor(hour/12) day_half,
           sum(A_messages) A_messages,
           sum(B_messages) B_messages,
           date
    from sat_ssvid
    group by ssvid, date, day_half
),

reception_quality as (
    select floor(a.lat) lat_bin,
           floor(a.lon) lon_bin,
           if(by_half_day.A_messages > 0, "A", "B") class,
           count(*) hours,
           avg(sat_pos_per_hour) * 24 sat_pos_per_day
    from sat_ssvid a
    join by_half_day 
    on    a.ssvid=by_half_day.ssvid 
      and floor(a.hour/12) = by_half_day.day_half
      and a.date = by_half_day.date
      and (-- if Class A, moving at the speed to ping once every 10 seconds
           (by_half_day.A_messages > 0 and  min_interpolated_speed_knots > 0.5 
            and max_interpolated_speed_knots < 14)
           or (by_half_day.B_messages > 0 and min_interpolated_speed_knots > 2 ))
      -- make sure it is just class A or class B... this might make it fail
      -- for the vessels that are both A and B...
      and not (by_half_day.A_messages > 0 and by_half_day.B_messages > 0) 
      and max_interpolated_speed_knots < 30 -- eliminate some weird noise
    group by lat_bin, lon_bin, class
)

select class as cls, * except (class) from reception_quality