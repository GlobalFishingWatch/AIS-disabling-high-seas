#standardSQL

create temp function map_label(label string)
as (
  case when label ="drifting_longlines" then "drifting_longlines"
  when label ="tuna_purse_seines" then "tuna_purse_seines"
  when label ="squid_jigger" then "squid_jigger"
  when label = "trawlers" then "trawlers"
  else "other" end
);

create table
   {{ output_table }}
cluster by
vessel_class,
is_real_gap,
over_200_nm,
over_four_weeks

as


with
# Best vessel class
vessel_info AS (
select
  ssvid,
  year,
  map_label(best_vessel_class) as vessel_class,
  best_flag as flag
from `world-fishing-827.gfw_research.fishing_vessels_ssvid_v20210301`
),


real_gaps as
(
select distinct gap_id
from
  `world-fishing-827.proj_ais_gaps_catena.ais_gap_events_features_v20210722`
WHERE gap_hours >= 12
    AND (off_distance_from_shore_m > 1852*50 AND on_distance_from_shore_m > 1852*50)
    AND (positions_per_day_off > 5 AND positions_per_day_on > 5)
    AND (DATE(gap_start) >= '2017-01-01' AND DATE(gap_end) <= '2019-12-31')
    AND positions_X_hours_before_sat >= 19
)

select
floor(a.lat*{{ scale }}) lat_index,
floor(a.lon*{{ scale }}) lon_index,
vessel_class,
flag,
gap_hours > 7*24 over_one_week,
gap_hours > 14*24 over_two_weeks,
gap_hours > 7*24*4 over_four_weeks,
b.distance_from_shore_m > 1852*200 over_200_nm,
d.gap_id is not null is_real_gap,
b.distance_from_shore_m > 1852*50 as over_50nm,
count(*) gap_hours
from `world-fishing-827.proj_ais_gaps_catena.gap_positions_hourly_v20210722` a
join
vessel_info c
on a.ssvid = c.ssvid
and extract(year from a._partitiontime) = c.year
JOIN
  `world-fishing-827.pipe_static.distance_from_shore` b
ON
  cast( (a.lat*100) as int64) = cast( (b.lat*100) as int64)
  AND cast((a.lon*100) as int64) =cast(b.lon*100 as int64)
left join real_gaps d
using(gap_id)
where
date(_partitiontime) between "2017-01-01" and "2019-12-31" -- 3 years of data
 -- only analyzing more than 50 nautical miles from shore
 and
gap_hours > 12
group by lat_index, lon_index, vessel_class, is_real_gap, over_200_nm, flag, over_50nm,
over_one_week, over_four_weeks, over_two_weeks
